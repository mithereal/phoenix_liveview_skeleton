user  nginx;
worker_processes  1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections  2048;
  multi_accept        on;
}

# feel free to choose any facility you like in range 0..7
error_log syslog:server=unix:/dev/log,facility=local6,tag=nginx,severity=error;

http {
  ##
  # Logging
  ##
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;

  ##
  # HTML, charset
  ##
  index index.html index.htm;
  charset utf-8;

  ##
  # Security
  ##
  server_tokens off;
  autoindex off;
  client_max_body_size 2m;

  ##
  # MIME
  ##
  include       mime.types;
  default_type  application/octet-stream;

  ##
  # Performance
  ##
  sendfile        on;
  sendfile_max_chunk  512k;

  tcp_nopush   on;
  tcp_nodelay  on;

  # use this only when your nginx server serves static files
  open_file_cache           max=1000 inactive=20s;
  open_file_cache_valid     30s;
  open_file_cache_min_uses  2;
  open_file_cache_errors    off;

  ##
  # SSL
  ##
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_tickets off;
  ssl_session_cache         shared:SSL:50m;
  ssl_session_timeout       10m;
  ssl_stapling              off;
  ssl_stapling_verify       off;
  # Don't forget to set `ssl_trusted_certificate` to the chain of your cert in the `server` block.
  resolver                  8.8.8.8 8.8.4.4;  # replace with `127.0.0.1` if you have a local dns server
  ssl_prefer_server_ciphers on;
  ssl_dhparam               ssl/dhparam.pem;  # openssl dhparam -out ssl/dhparam.pem 4096

  ##
  # GZIP
  ##
  gzip               on;
  gzip_disable       msie6;
  gzip_vary          on;
  gzip_proxied       any;
  # gzip_http_version  1.0;  # uncomment this to allow gzipping responses on http/1.0. proxy_pass uses http/1.0
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  # uncomment this if you want to provide nginx already gzipped variants of files, like `${file}.gz`
  # gzip_static on;
server {
      listen       80;
      server_name  localhost;

  access_log /var/log/localhost.log;
  error_log /var/log/localhost.log;

 location ~ /.well-known/acme-challenge/ {
                allow all;
                default_type "text/plain";
                root /var/www/letsencrypt;
                try_files $uri =403;
                break;
        }

    location / {
           return 301 https://localhost:4001$request_uri;
      }
}

   map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

upstream websocket {
  server localhost:4001 max_fails=5 fail_timeout=60s;
}


server {
    listen              443 ssl;
    server_name  localhost;

  location ~ /.well-known/acme-challenge/ {
                allow all;
                default_type "text/plain";
                root /var/www/letsencrypt;
                try_files $uri =403;
                break;
        }

  location / {
        allow all;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        add_header Strict-Transport-Security "max-age=0;";

    # WebSockets
    proxy_http_version 1.1;
    proxy_pass https://websocket;

   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection "Upgrade";
   proxy_set_header Access-Control-Allow-Origin *;
   proxy_read_timeout 900;


   resolver 8.8.8.8 ipv6=off;

    # asset delivery using NGINX
        # location ~* ^.+\.(css|cur|gif|gz|ico|jpg|jpeg|js|png|svg|woff|woff2)$ {
        #   root /home/phoenix_liveview_skeleton/priv/static;
        #   etag off;
        #   expires max;
        #   add_header Cache-Control public;
        # }

    }
    }

    ssl_certificate     /etc/nginx/certs/self_signed.pem;
    ssl_certificate_key /etc/nginx/certs/self_signed-key.pem;
 }
